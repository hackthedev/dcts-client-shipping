<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>